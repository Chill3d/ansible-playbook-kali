---
# Playbook for Kali

## Personalize Kali
- hosts: kali
  become: true
  become_user: "{{ kali_user }}"
  tasks:
    - name: Set home directory fact
      set_fact:
        kali_user_homedir: "{{ lookup('env','HOME') }}"

    - name: Set desktop environment fact
      set_fact:
        kali_desktop_environment: "{{ lookup('env','XDG_CURRENT_DESKTOP') | lower }}"

    ### Configure Gnome settings ###
    - block:
        - name: Find Burp Suite desktop files
          find:
            paths: 
              - "{{ burpsuite_dir }}/.install4j"
            patterns: "*.desktop"
            file_type: any
          register: burpsuite_desktop_files

        - name: Set Burp Suite desktop file name
          set_fact:
            burpsuite_desktop_file_name: "{{ burpsuite_desktop_files.files[0].path | basename }}"
          when: burpsuite_desktop_files.matched > 0

        - name: Tweak Gnome settings
          command: "gsettings set {{ item.schema }} {{ item.path }} {{ item.key }}"
          loop: "{{ gnome_settings }}"

        - name: Get current terminal profile
          command: gsettings get org.gnome.Terminal.ProfilesList default
          changed_when: false
          register: terminal_profile

        # Gnome terminal settings
        - name: Configure Terminal settings
          command: "gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:{{ terminal_profile.stdout | regex_replace('''') }}/ {{ item.path }} {{ item.key }}"
          loop: "{{ gnome_terminal_settings }}"
      when: "kali_desktop_environment == 'gnome'"

    ### XFCE settings
    - name: Apply XFCE settings
      command: "xfconf-query --create -c {{ item.channel }} -p {{ item.property }} -t {{ item.type }} -s {{ item.value }}"
      loop: "{{ xfce_settings }}"
      when: "kali_desktop_environment == 'xfce'"

    ### Configure tmux ###
    - name: Copy tmux config
      copy:
        src: "files/tmux/.tmux.conf"
        dest: "{{ kali_user_homedir }}/.tmux.conf"
        mode: 0640

    ### Firefox personalization ###
    - name: Set firefox_default_profile_dir fact
      set_fact:
        firefox_default_profile_dir: "{{ kali_user_homedir }}/.mozilla/firefox/hacker.firefox-esr"

    - name: Check if Firefox profile exists
      stat:
        path: "{{ firefox_default_profile_dir }}"
      register: firefox_profile

    - name: Create FireFox default profile
      command: "firefox-esr -CreateProfile \"hacker {{ firefox_default_profile_dir }}\""
      when: not firefox_profile.stat.exists

    - name: Copy Firefox desktop file
      copy:
        src: files/firefox/hacker-firefox-esr.desktop
        dest: "{{ kali_user_homedir }}/.local/share/applications/hacker-firefox-esr.desktop"
        mode: 0640

    - name: Copy user.js for Firefox user preferences
      copy:
        src: files/firefox/user.js
        dest: "{{ firefox_default_profile_dir }}/user.js"
        mode: 0640

    - name: Add preferences from quieter-firefox
      blockinfile:
        block: "{{ lookup('file', '/opt/quieter-firefox/user.js') }}"
        dest: "{{ firefox_default_profile_dir }}/user.js"
        marker: "// {mark} ANSIBLE MANAGED BLOCK"

    ### SciTE user properties ###
    - name: Copy SciTE user properties
      copy:
        src: "files/scite/.SciTEUser.properties"
        dest: "{{ kali_user_homedir }}/.SciTEUser.properties"
        mode: 0640

    ### VS Code ###
    - name: Ensure VS Code user directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: 0700
      loop:
        - "{{ kali_user_homedir }}/.config/Code/User"
        - "{{ kali_user_homedir }}/.vscode"

    - name: Copy VS Code settings
      copy:
        src: files/vscode/settings.json
        dest: "{{ kali_user_homedir }}/.config/Code/User/settings.json"
        mode: 0640

    - name: Install VS Code extensions
      command: "code --user-data-dir ~/.vscode --install-extension {{ item }}"
      loop: "{{ vscode_extensions | default([]) }}"
      register: vscode_install_extension_result
      changed_when: "'successfully installed' in vscode_install_extension_result.stdout"

    ### GDB ###
    - name: Clone GEF repo
      git:
        repo: "https://github.com/hugsy/gef.git"
        dest: "{{ kali_user_homedir }}/gef"
        force: true

    - name: Install optional modules for GEF
      pip:
        name:
          - capstone
          - ropper
          - unicorn
        executable: pip3

    - name: Copy gdb user properties
      copy:
        src: "files/gdb/.gdbinit"
        dest: "{{ kali_user_homedir }}/.gdbinit"
        mode: 0640