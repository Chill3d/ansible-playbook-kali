---
# Playbook to configure Kali VM
- hosts: kali
  tasks:
    - name: Update all packages to the latest version
      apt:
        update_cache: true
        upgrade: safe
  
    - name: Install packages
      apt:
        name: "{{ kali_packages }}"
        state: latest

# Install extra apps and files
- hosts: kali
  roles:
    - ansible-role-chromium
    - ansible-role-crackmapexec
    - ansible-role-empire
    - ansible-role-hcxdumptool
    - ansible-role-hcxtools
    - ansible-role-impacket
    - ansible-role-nullinux
    - ansible-role-vscode
    - ansible-role-wireguard
  tasks:
    ## VMware SSH issue workaround ##
    - name: SSH config
      blockinfile:
        path: /root/.ssh/config
        marker: "# {mark} ANSIBLE MANAGED BLOCK vmware-ssh-workaround"
        state: present
        block: |
          # Workaround for VMware SSH issue - https://github.com/vmware/open-vm-tools/issues/287
          Host *
          IPQoS lowdelay throughput

    ## Download various git projects ##
    - name: Clone git repositories
      git:
        repo: "{{ item.repo }}"
        dest: "/opt/{{ item.name }}"
        version: "{{ item.version | default('master') }}"
        force: true
      loop: "{{ git_repos | flatten(levels=1) }}"

    ## Configure Metasploit ##
    - name: Enable Postgresql service
      service:
        name: postgresql
        state: started
        enabled: true

    - name: Check msfdb status
      command: msfdb status
      register: msfdb_status

    - name: Initialize msfdb
      command: msfdb init
      when: "'No configuration file found' in msfdb_status.stdout"

    ## Configure OpenSSL config ##
    - name: Configure OpenSSL
      lineinfile:
        path: /etc/ssl/openssl.cnf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - regexp: "^MinProtocol ="
          line: "MinProtocol = None"
        - regexp: "^CipherStrings ="
          line: "CipherStrings = DEFAULT"

    ## Setup Burp extension dependencies ##
    - name: Create directory for BurpSuite extensions
      file:
        path: "{{ burpsuite_ext_dir }}"
        state: directory

    - name: Get JRuby sha256 checksum file
      get_url:
        url: "https://repo1.maven.org/maven2/org/jruby/jruby-complete/{{ burpsuite_jruby_version }}/jruby-complete-{{ burpsuite_jruby_version }}.jar.sha256"
        dest: "{{ burpsuite_ext_dir }}/jruby-complete.jar.sha256"

    - name: Download JRuby for Burp Suite
      get_url:
        url: "https://repo1.maven.org/maven2/org/jruby/jruby-complete/{{ burpsuite_jruby_version }}/jruby-complete-{{ burpsuite_jruby_version }}.jar"
        dest: "{{ burpsuite_ext_dir }}/jruby-complete.jar"
        checksum: "sha256:{{ jruby_checksums[0] }}"
      vars:
        jruby_checksums: "{{ lookup('file', '{{ burpsuite_ext_dir }}/jruby-complete.jar.sha256').splitlines() | list }}"

    - name: Get Jython sha1 checksum file
      get_url:
        url: "https://repo1.maven.org/maven2/org/python/jython-standalone/{{ burpsuite_jython_version }}/jython-standalone-{{ burpsuite_jython_version }}.jar.sha1"
        dest: "{{ burpsuite_ext_dir }}/jython-standalone.jar.sha1"

    - name: Download Jython for Burp Suite
      get_url:
        url: "https://repo1.maven.org/maven2/org/python/jython-standalone/{{ burpsuite_jython_version }}/jython-standalone-{{ burpsuite_jython_version }}.jar"
        dest: "{{ burpsuite_ext_dir }}/jython-standalone.jar"
        checksum: "sha1:{{ jython_checksums[0] }}"
      vars:
        jython_checksums: "{{ lookup('file', '{{ burpsuite_ext_dir }}/jython-standalone.jar.sha1').splitlines() | list }}"

    ## Configure tmux ##
    - name: Copy tmux config
      copy:
        src: files/.tmux.conf
        dest: /root/.tmux.conf
        owner: root
        group: root
        mode: 0640

    ## Configure Gnome settings ##
    - name: Configure Gnome to less annoying defaults
      command: "gsettings set {{ item }}"
      loop:
        - "org.gnome.desktop.session idle-delay {{ gnome_idle_delay }}"
        - "org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type '{{ gnome_sleep_type }}'"
        - "org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type '{{ gnome_sleep_type }}'"

    ## Configure proxychains ##
    - name: Configure proxychains
      lineinfile:
        path: "{{ item }}"
        regexp: "^proxy_dns"
        state: absent
      loop:
        - "/etc/proxychains.conf"
        - "/etc/proxychains4.conf"

    ## Disable system resume ##    
    - name: Disable resuming. Quicker booting.
      lineinfile:
        path: "/etc/initramfs-tools/conf.d/resume"
        regexp: "RESUME="
        line: "RESUME=none"
      register: resume_swap
    
    - block:
        - name: Generate new initramfs
          command: update-initramfs -u
        
        - name: Display reboot message
          debug:
            msg: initramfs has been updated. A reboot is required.
      when: resume_swap is changed

    ## Clean-up apt ##
    - name: Remove useless packages from the cache
      apt:
        autoclean: true

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: true
